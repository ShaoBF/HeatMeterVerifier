
// ChildFrm.cpp : CChildFrame 类的实现
//

#include "stdafx.h"
#include "HeatMeterVerifier.h"
#include "TestHtmlDlg.h"
#include "SerialTestDlg.h"
#include "MeterChooserDlg.h"
#include "MeterWizard.h"

#include "ChildFrm.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif

// CChildFrame

IMPLEMENT_DYNCREATE(CChildFrame, CMDIChildWnd)

BEGIN_MESSAGE_MAP(CChildFrame, CMDIChildWnd)
	ON_UPDATE_COMMAND_UI(ID_METER_SERIAL_SETTINGS, &CChildFrame::OnUpdateMeterSerialSettings)
	ON_COMMAND(ID_METER_SERIAL_SETTINGS, &CChildFrame::OnMeterSerialSettings)
	ON_COMMAND(ID_START_METER_READ, &CChildFrame::OnStartMeterRead)
	ON_COMMAND(ID_HTML_TEST, &CChildFrame::OnHtmlTest)
END_MESSAGE_MAP()

// CChildFrame 构造/析构

CChildFrame::CChildFrame()
{
	// TODO:  在此添加成员初始化代码
}

CChildFrame::~CChildFrame()
{
}

BOOL CChildFrame::OnCreateClient(LPCREATESTRUCT /*lpcs*/, CCreateContext* pContext)
{
	return m_wndSplitter.Create(this,
		2, 2,			// TODO:  调整行数和列数
		CSize(10, 10),	// TODO:  调整最小窗格大小
		pContext);
}

BOOL CChildFrame::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO:  在此处通过修改 CREATESTRUCT cs 来修改窗口类或样式
	if( !CMDIChildWnd::PreCreateWindow(cs) )
		return FALSE;

	return TRUE;
}

// CChildFrame 诊断

#ifdef _DEBUG
void CChildFrame::AssertValid() const
{
	CMDIChildWnd::AssertValid();
}

void CChildFrame::Dump(CDumpContext& dc) const
{
	CMDIChildWnd::Dump(dc);
}
#endif //_DEBUG

// CChildFrame 消息处理程序


void CChildFrame::OnUpdateMeterSerialSettings(CCmdUI *pCmdUI)
{
	if (pCmdUI->m_nID == ID_METER_SERIAL_SETTINGS){
		pCmdUI->Enable(TRUE);
	}
}


void CChildFrame::OnMeterSerialSettings()
{
	CSerialTestDlg dlg;
	dlg.Init();
	INT_PTR nResponse = dlg.DoModal();

	if (nResponse == IDOK)
	{
		// TODO:  在此放置处理何时用
		//  “确定”来关闭对话框的代码
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO:  在此放置处理何时用
		//  “取消”来关闭对话框的代码
	}
	else if (nResponse == -1)
	{
		TRACE(traceAppMsg, 0, "警告: 对话框创建失败，应用程序将意外终止。\n");
		TRACE(traceAppMsg, 0, "警告: 如果您在对话框上使用 MFC 控件，则无法 #define _AFX_NO_MFC_CONTROLS_IN_DIALOGS。\n");
	}
}

extern CMeterWizard wizard;

void CChildFrame::OnStartMeterRead()
{	
	//wizard.ChooseMeters();
	wizard.ReadMeters();
}


void CChildFrame::OnHtmlTest()
{
	CHtmlReportDlg dlg;
	//dlg.Init();
	INT_PTR nResponse = dlg.DoModal();

	if (nResponse == IDOK)
	{
		// TODO:  在此放置处理何时用
		//  “确定”来关闭对话框的代码
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO:  在此放置处理何时用
		//  “取消”来关闭对话框的代码
	}
	else if (nResponse == -1)
	{
		TRACE(traceAppMsg, 0, "警告: 对话框创建失败，应用程序将意外终止。\n");
		TRACE(traceAppMsg, 0, "警告: 如果您在对话框上使用 MFC 控件，则无法 #define _AFX_NO_MFC_CONTROLS_IN_DIALOGS。\n");
	}

}
